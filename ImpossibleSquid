--// Services \\--
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")

--// Variable \\--
local Player = Players.LocalPlayer

--// ESP Library by Kiriot22 \\--
local ESP = loadstring(game:HttpGet("https://kiriot22.com/releases/ESP.lua"))()
ESP:Toggle(true)
ESP.Players = false
ESP.Boxes = false

--// Set Tile \\--
function Detect(Root, C)
    -- Variables
    local Parameters = RaycastParams.new()
    Parameters.FilterType = Enum.RaycastFilterType.Whitelist
    Parameters.FilterDescendantsInstances = {Workspace:WaitForChild("Guess")}
    -- RayCast
    local Hit = Workspace:Raycast(Root.Position, Vector3.new(0, -5, 0), Parameters)
    if Hit and Hit.Instance:FindFirstChildOfClass("TouchTransmitter") then
        ESP:Add(Hit.Instance, {
            Name = "Ezpi",
            PrimaryPart = Hit.Instance,
            Color = C,
            IsEnabled = function(A_1)
                return Player:DistanceFromCharacter(A_1.PrimaryPart.Position) <= 100
            end
        })
    end
end

--// Humanoid Detect Stuff \\--
function OnDeath(Char)
    local Humanoid = Char:WaitForChild("Humanoid")
    local Root = Char:WaitForChild("HumanoidRootPart")
    Humanoid.StateChanged:Connect(function(Old, New)
        print(Old, New)
        if Old == Enum.HumanoidStateType.Freefall and New == Enum.HumanoidStateType.Landed or New == Enum.HumanoidStateType.Jumping then
            Detect(Root, Color3.new(0, 1, 0))
        elseif New == Enum.HumanoidStateType.Dead then
            Detect(Root, Color3.new(1, 0, 0))
        end
    end)
end

--// Detect Player Death \\--
for _, A_1 in next, Players:GetPlayers() do
    if A_1.Character then
        task.spawn(function()
            OnDeath(A_1.Character)
        end)
    end
    A_1.CharacterAdded:Connect(OnDeath)
end
Players.PlayerAdded:Connect(function(Plr)
    if Plr.Character then
        task.spawn(function()
            OnDeath(Plr.Character)
        end)
    end
    Plr.CharacterAdded:Connect(OnDeath)
end)
